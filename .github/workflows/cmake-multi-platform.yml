name: Create Release

on:
  push:
    tags:
      - 'v*' # Trigger on tags starting with 'v'

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        include:
          - os: windows-latest
            cmake_generator: "Visual Studio 17 2022"
            artifact_name: OOHD-Windows.exe
          - os: macos-latest
            cmake_generator: "Xcode"
            artifact_name: OOHD-macOS

    steps:
    - uses: actions/checkout@v2

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      working-directory: ${{github.workspace}}/build
      run: cmake ${{github.workspace}} -G "${{matrix.cmake_generator}}" -DCMAKE_BUILD_TYPE=Release

    - name: Build
      working-directory: ${{github.workspace}}/build
      run: cmake --build . --config Release

    - name: Rename and Move Artifact (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        mv ${{github.workspace}}/build/Release/oohd.exe ${{github.workspace}}/${{ matrix.artifact_name }}

    - name: Rename and Move Artifact (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        mv ${{github.workspace}}/build/oohd ${{github.workspace}}/${{ matrix.artifact_name }}

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.artifact_name }}
        path: ${{github.workspace}}/${{ matrix.artifact_name }}

  create_release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Download Artifacts
      uses: actions/download-artifact@v2

    - name: Upload Release Asset (Windows)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./OOHD-Windows.exe/OOHD-Windows.exe
        asset_name: OOHD-Windows.exe
        asset_content_type: application/octet-stream

    - name: Upload Release Asset (macOS)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./OOHD-macOS/OOHD-macOS
        asset_name: OOHD-macOS
        asset_content_type: application/octet-stream
